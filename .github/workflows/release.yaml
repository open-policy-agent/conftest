name: tag

on:
  push:
    tags:
      - 'v*'
env:
  IMAGE: openpolicyagent/conftest
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # It is important to check the GoReleaser config before pushing to
      # Dockerhub to avoid having mismatches between what is in Dockerhub
      # and GitHub releases.
      - name: check releaser config
        uses: goreleaser/goreleaser-action@v6
        with:
          args: check
          version: "~> v1"

      - name: login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: get version
        id: get-version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: setup docker buildx
        run: docker buildx create --name conftestbuild --use

      - name: Build and push Docker image
        uses: docker/build-push-action@v6 
        with:
          context: .
          push: true
          build-args: |
            VERSION=${{ steps.get-version.outputs.VERSION }}
          tags: |
            ${{ env.IMAGE }}:${{ steps.get-version.outputs.VERSION }}
          platforms: ${{ env.PLATFORMS }}

      - name: Build and push Docker latest image
        uses: docker/build-push-action@v6 
        with:
          context: .
          push: true
          build-args: |
            VERSION=${{ steps.get-version.outputs.VERSION }}
          tags: |
            ${{ env.IMAGE }}:latest
          platforms: ${{ env.PLATFORMS }}

      - name: Build and push examples image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          target: examples
          tags: |
            ${{ env.IMAGE }}:examples
          platforms: ${{ env.PLATFORMS }}

      - name: setup go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24.x"

      - name: release
        uses: goreleaser/goreleaser-action@v6
        with:
          args: release --clean
          version: "~> v1"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}